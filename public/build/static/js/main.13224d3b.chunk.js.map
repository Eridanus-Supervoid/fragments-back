{"version":3,"sources":["services/index.js","pages/Login.js","pages/Signup.js","context.js","components/NewFragment.js","pages/Fragments.js","components/NewNote.js","pages/FragmentDetail.js","components/LayoutApp.js","components/PrivateRutes.js","Router.js","serviceWorker.js","index.js"],"names":["baseURL","service","axios","create","withCredentials","signup","user","a","post","login","logOut","get","getProfile","getFragment","fragmentId","getFragments","userId","createNote","values","getSummarize","Signup","history","Form","useForm","form","push","layout","name","onFinish","Item","label","rules","required","message","Password","type","htmlType","MyContext","createContext","Provider","children","useState","setUser","setCtxUser","useEffect","data","profile","value","clearCtxUser","Login","useContext","password","hash","salt","console","log","gutter","span","block","href","danger","NewFragment","useHistory","fragment","_id","TextArea","min","max","Title","Typography","Meta","Card","Fragments","showModal","setShowModal","userFragments","setUserFragments","fetchFragments","style","display","flexDirection","justifyContent","alignItems","alignContent","onClick","level","margin","title","visible","onCancel","footer","map","key","sm","md","lg","width","actions","to","PlusOutlined","hoverable","description","summarize","backgroundColor","padding","active","NewNote","setnewNote","note","FragmentDetail","match","params","userFragment","setUserFragment","newNote","fetchFragment","deleteNote","bordered","summary","window","myTimeout","speechSynthesis","cancel","setTimeout","myTimer","pause","resume","toSpeak","msg","SpeechSynthesisUtterance","voices","getVoices","voice","volume","lang","onend","clearTimeout","speak","alert","noteId","Header","Layout","Content","Footer","Sider","Menu","SubMenu","LayoutApp","collapsed","setCollapsed","logoutProcess","minHeight","rel","collapsible","onCollapse","className","height","src","alt","fontSize","fontFamily","borderBottom","theme","mode","defaultSelectedKeys","icon","LoginOutlined","BookOutlined","float","textAlign","Component","component","rest","render","props","pathname","state","from","location","Home","Profile","NotFound","Router","exact","path","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13224d3b.chunk.js","sourcesContent":["import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production' ?\n    (baseURL = '/') :\n    (baseURL = 'http://localhost:3000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\n\nexport const test = async() => {\n    return await service.get(\"/\")\n}\n\nexport const signup = async user => {\n    return await service.post(\"/auth/signup\", user)\n}\n\nexport const login = async user => {\n    return await service.post(\"/auth/login/\", user)\n}\n\nexport const logOut = async() => {\n    return await service.get(\"/auth/logout\")\n}\n\nexport const getProfile = async() => {\n    return await service.get(\"/auth/profile\")\n}\n\nexport const getFragment = async fragmentId => {\n    return await service.get(`/api/fragments/${fragmentId}`)\n}\n\nexport const getFragments = async userId => {\n    return await service.post(\"/api/fragmentsFetch\", userId)\n}\n\nexport const createNote = async values => {\n    return await service.post(\"/api/notes\", values)\n}\n\n\nexport const getSummarize = async values => {\n    return await service.post('/api/summarize', values)\n}","import React, { useContext } from \"react\"\nimport { Form, Input, Button, Divider, Row, Col } from \"antd\"\nimport { login } from \"../services\"\nimport { MyContext } from \"../context\"\n\nlet baseURL\n\nprocess.env.NODE_ENV === \"production\"\n    ? (baseURL = \"https://murmuring-reaches-95521.herokuapp.com\")\n    : (baseURL = \"http://localhost:3000\")\n\nconst Login = ({history}) => {\n    const [form] = Form.useForm()\n    const { setCtxUser } = useContext(MyContext)\n\n    async function loginProcess(values) {\n        const {\n        data: { user }\n        } = await login(values)\n        delete user.password\n        delete user.hash\n        delete user.salt\n        setCtxUser(user)\n        console.log(user)\n        history.push(\"/fragments\")\n    }\n    return (\n        <div>\n        <Form layout='vertical' name='basic' form={form} onFinish={loginProcess}>\n            <Form.Item\n            label='Email'\n            name='email'\n            rules={[{ required: true, message: \"Please input your email!\" }]}>\n            <Input />\n            </Form.Item>\n\n            <Form.Item\n            label='Password'\n            name='password'\n            rules={[{ required: true, message: \"Please input your password!\" }]}>\n            <Input.Password />\n            </Form.Item>\n\n            <Form.Item>\n            <Button type='primary' htmlType='submit'>\n                Login\n            </Button>\n            </Form.Item>\n        </Form>\n\n        <Divider>Or</Divider>\n        <br />\n        <Row gutter={16}>\n            <Col span={12}>\n            <Button type='primary' block>\n                <a href={`${baseURL}/auth/facebook`}>Login with Facebook</a>\n            </Button>\n            </Col>\n            <Col span={12}>\n            <Button danger type='primary' block>\n                <a href={`${baseURL}/auth/google`}>Login with Google</a>\n            </Button>\n            </Col>\n        </Row>\n        </div>\n    )\n}\n\nexport default Login\n","import React from \"react\"\nimport { Form, Input, Button } from \"antd\"\nimport { signup } from \"../services\"\n\nconst Signup = ({ history }) => {\n    const [form] = Form.useForm()\n\n    async function signupProcess(values) {\n        await signup(values)\n        history.push(\"/login\")\n    }\n    return (\n            <div>\n            <Form layout='vertical' name='basic' form={form} onFinish={signupProcess}>\n                <Form.Item\n                label='Name'\n                name='name'\n                rules={[{ required: true, message: \"Please input your name!\" }]}>\n                <Input />\n                </Form.Item>\n                <Form.Item\n                label='Email'\n                name='email'\n                rules={[{ required: true, message: \"Please input your email!\" }]}>\n                <Input />\n                </Form.Item>\n                <Form.Item\n                label='Password'\n                name='password'\n                rules={[{ required: true, message: \"Please input your password!\" }]}>\n                <Input.Password />\n                </Form.Item>\n                <Form.Item>\n                <Button type='primary' htmlType='submit'>\n                    Submit\n                </Button>\n                </Form.Item>\n            </Form>\n            </div>\n    )\n}\n\nexport default Signup","import React, { createContext, useState, useEffect } from \"react\"\nimport { getProfile } from \"./services\"\nexport const MyContext = createContext()\n\nexport default function Provider({ children }) {\n    const [user, setUser] = useState(null)\n\n    const setCtxUser = user => setUser(user)\n    const clearCtxUser = () => setUser(null)\n\n    useEffect(() => {\n        async function profile() {\n        const {\n            data: { user }\n        } = await getProfile()\n        setCtxUser(user)\n        }\n        profile()\n    }, [])\n\n    return (\n        <MyContext.Provider\n        value={{\n            user,\n            setCtxUser,\n            clearCtxUser\n        }}>\n        {children}\n        </MyContext.Provider>\n    )\n}","import React, {useContext} from 'react'\nimport { MyContext } from \"../context\"\nimport {getSummarize} from \"../services\"\nimport { Form, Input, Button, InputNumber} from \"antd\"\nimport {useHistory} from \"react-router-dom\"\n\nconst NewFragment = () => {\n    const history = useHistory()\n    const [form] = Form.useForm()\n    const { user } = useContext(MyContext)\n        \n    async function summarize(values) {\n        const fragment = await getSummarize({...values, user})\n        console.log(fragment)\n        console.log(fragment.data._id)\n        history.push(`/fragments/${fragment.data._id}`)\n    }  \n\n    return (\n        <div>\n            <Form layout='vertical' name='basic' form={form} onFinish={summarize}>\n            <Form.Item\n            label='Nombre'\n            name='name'\n            rules={[{ required: true, message: \"Nombre del resumen.\" }]}>\n            <Input />\n            </Form.Item>\n            <Form.Item\n            label='Texto a Resumir'\n            name='txt'\n            rules={[{ required: true, message: \"Introduce el texto a resumir.\" }]}>\n            <Input.TextArea />\n            </Form.Item>\n            <Form.Item\n            label='Cantidad de oraciones.'\n            name='sentences'\n            rules={[{ type: 'number', min:0, max:99, required: true, message: \"Introduce la cantidad de oraciones.\" }]}>\n            <InputNumber />\n            </Form.Item>\n            <Form.Item>\n            <Button type='primary' htmlType='submit'>\n                Resumir\n            </Button>\n            </Form.Item>\n        </Form>\n        </div>\n    )\n}\n\nexport default NewFragment;\n","import React, {useState, useEffect, useContext} from 'react'\nimport { Button, Modal, Typography, Skeleton, Col, Card} from \"antd\"\nimport { PlusOutlined } from \"@ant-design/icons\"\nimport {getFragments } from \"../services/index\"\nimport NewFragment from \"../components/NewFragment\"\nimport { MyContext } from \"../context\"\nimport { Link } from \"react-router-dom\"\nconst {Title} = Typography\nconst { Meta } = Card\n\nconst Fragments = () => {\n    const [showModal, setShowModal] = useState(false)\n    const [userFragments, setUserFragments] = useState(null)\n    const { user } = useContext(MyContext)\n\n    useEffect(() => {\n            console.log(user._id)\n            const userId = {\n                userId: user._id\n            }\n            async function fetchFragments() {\n            const {\n                data: {userFragments}\n            } = await getFragments(userId)\n            console.log(userFragments)\n            setUserFragments(userFragments)\n            }\n            fetchFragments()\n    }, [])\n\n    return userFragments ? (\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent:\"space-around\", alignItems:\"center\", alignContent:\"strech\" }}>\n            <Button block type='primary' onClick={() => setShowModal(true)}>\n                New Fragment\n            </Button>\n            <Title level={1} style={{margin:\"30px\"}}>My Fragments</Title>\n            <Modal\n                title='Create New Fragment'\n                visible={showModal}\n                onCancel={() => setShowModal(false)}\n                footer={[\n                <Button type='dashed' danger onClick={() => setShowModal(false)} style={{margin:\"30px\"}}>\n                    Cancel\n                </Button>\n                ]}>\n                <NewFragment/>\n            </Modal>\n        {userFragments.map(fragment => (\n        <Col key={fragment._id} sm={24} md={12} lg={8} style={{margin:\"10px\", width:\"30%\"}}>\n            <Card\n                actions={[\n                <Link to={`/fragments/${fragment._id}`}>\n                    <PlusOutlined />\n                </Link>\n                ]}\n                hoverable>\n                <Meta\n                title={fragment.name}\n                description={\n                    <>\n                    <p>{fragment.summarize}</p>\n                    </>\n                }\n                />\n            </Card>\n        </Col>\n    ))}\n        </div>\n    ): (\n        <div style={{ backgroundColor: \"black\", padding: \"1rem\" }}>\n            <Skeleton active />\n        </div>\n    )\n}\n\nexport default Fragments\n","import React from \"react\"\nimport {createNote} from \"../services\"\nimport { Form, Input, Button} from \"antd\"\nimport {useHistory} from \"react-router-dom\"\n\nconst NewNote = ({fragmentId, setnewNote}) => {\n        \n    const history = useHistory()\n    const [form] = Form.useForm()\n    async function createNoteNow (values) {\n        console.log(fragmentId)\n        const note = await createNote({...values, fragmentId})\n        console.log(note)\n        setnewNote(true)\n        history.push(`/fragments/${fragmentId}`)\n    }  \n\n    return (\n        <div>\n            <Form layout='vertical' name='basic' form={form} onFinish={createNoteNow}>\n            <Form.Item\n            label='Nombre'\n            name='name'\n            rules={[{ required: true, message: \"Nombre de la nota.\" }]}>\n            <Input />\n            </Form.Item>\n            <Form.Item\n            label='Texto de la Nota'\n            name='summary'\n            rules={[{ required: true, message: \"Introduce el texto de tu nota.\" }]}>\n            <Input.TextArea />\n            </Form.Item>\n            <Form.Item>\n            <Button type='primary' htmlType='submit'>\n                Guardar\n            </Button>\n            </Form.Item>\n        </Form>\n        </div>\n    )\n}\n\nexport default NewNote;\n","import React, {useState, useEffect} from 'react'\nimport {getFragment} from '../services'\nimport {Button} from 'antd'\nimport { Card, Col, Row, Modal } from 'antd';\nimport NewNote from \"../components/NewNote\"\nconst { Meta } = Card\n\nconst FragmentDetail = ({\n    match: {\n        params: {fragmentId}\n    }\n    }) => {\n\n    const [userFragment, setUserFragment] = useState(null)\n    const [showModal, setShowModal] = useState(false)\n    const [newNote, setnewNote] = useState(false)\n    useEffect(() => {\n        async function fetchFragment() {\n        const {\n            data: {fragment}\n        } = await getFragment(fragmentId)\n        console.log(fragment)\n        setUserFragment(fragment)\n        }\n        fetchFragment()\n    }, [newNote, fragmentId])\n\n    const deleteNote = () => {\n\n    }\n\n    const textoVoz = () => {\n        if ('speechSynthesis' in window) {\n            var myTimeout;\n            function myTimer() {\n                window.speechSynthesis.pause();\n                window.speechSynthesis.resume();\n                myTimeout = setTimeout(myTimer, 10000);\n            }\n                window.speechSynthesis.cancel();\n                myTimeout = setTimeout(myTimer, 10000);\n                var toSpeak = userFragment.summary;\n                var msg = new SpeechSynthesisUtterance(toSpeak);\n                var voices = window.speechSynthesis.getVoices();\n                console.log(voices)\n                msg.voice = voices[5]; \n                msg.volume = 0.5;\n                msg.lang = 'es-US';\n                msg.onend =  function() { clearTimeout(myTimeout); }\n                window.speechSynthesis.speak(msg);\n        }else{\n            alert(\"Sorry, your browser doesn't support text to speech!\");\n        }\n    }\n\n    return userFragment ?(\n        <div>\n            <div>\n                <Button block type='primary' onClick={() => setShowModal(true)}>\n                    New Note\n                </Button>\n                <Modal\n                title='Create New Note'\n                visible={showModal}\n                onCancel={() => setShowModal(false)}\n                footer={[\n                <Button type='dashed' danger onClick={() => setShowModal(false)} style={{margin:\"30px\"}}>\n                    Cancel\n                </Button>\n                ]}>\n                <NewNote fragmentId={fragmentId} setnewNote={setnewNote}/>\n                </Modal>\n                <Col>\n                <Card title={userFragment.name} bordered={false} style={{ width: \"96%\", margin:\"30px\" }}>\n                <p>{userFragment.summary}</p>\n                <Button onClick={textoVoz}>Texto a Voz</Button>\n                <Button onClick={() => window.speechSynthesis.pause()}>Pause</Button>\n                <Button onClick={() => window.speechSynthesis.resume()}>Play</Button>\n                <Button onClick={() => window.speechSynthesis.cancel()}>Stop</Button>\n                </Card>\n                <Row style={{ margin:\"20px\" }}>\n                {userFragment.noteId.map(note => (\n                    <Col key={note._id}>\n                    <Card style={{ margin:\"10px\" }}>\n                        <Meta\n                        title={note.name}\n                        description={\n                            <p>{note.summary}</p>\n                        }\n                        />\n                        <Button type='dashed' danger onClick={deleteNote}>Delete</Button>\n                    </Card>\n                    </Col>\n                ))}\n                </Row>\n                </Col>\n            </div>\n        </div>\n    ) : \n    (\n        <div>\n            <p>En espera</p>\n        </div>\n    )\n}\n\nexport default FragmentDetail\n","import React, {useState, useContext, useEffect} from 'react'\nimport { Layout, Menu} from 'antd';\nimport {\n    BookOutlined,\n    LoginOutlined,\n    TeamOutlined,\n    BuildOutlined\n} from '@ant-design/icons';\nimport {logOut} from \"../services\"\nimport {MyContext} from \"../context\"\nimport {Link, useHistory} from \"react-router-dom\"\nimport '../index.css'\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nfunction LayoutApp ({children}) {\n    const history = useHistory()\n    const [collapsed, setCollapsed] = useState(false)\n    const {clearCtxUser, user} = useContext(MyContext)\n    const onCollapse = collapsed => {\n        console.log(collapsed);\n        setCollapsed( collapsed );\n    };\n\n    const logoutProcess = async () => {\n        await logOut()\n        clearCtxUser()\n        history.push(\"/login\")\n    }\n\n\n    return (\n    <Layout style={{ minHeight: '100vh' }}>\n        <link href=\"https://fonts.googleapis.com/css2?family=Bellota+Text:wght@700&display=swap\" rel=\"stylesheet\"></link>\n        <Sider collapsible collapsed={collapsed} onCollapse={onCollapse} >\n        <div className=\"logo\" style={{height:\"63px\", display:\"flex\"}} > \n        <img src=\"./g26.png\" alt=\"logoFragments\" style={{height:\"35px\", margin:\"16px 5px 14px 20px\"}}/>\n        <p style={{margin:\"17px 10px\", fontSize:\"1.3rem\", fontFamily:'Bellota Text', borderBottom: \"1px solid #c24983\"}}>FRAGMENTS</p>\n        </div>\n        <Menu theme=\"dark\" mode=\"inline\"  defaultSelectedKeys={['5']} >\n            {!user && (\n            <>\n                <Menu.Item key=\"2\" icon={<LoginOutlined />}>\n                    <Link to=\"/signup\">Signup</Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\" icon={<LoginOutlined />}>\n                    <Link to=\"/login\">Login</Link>\n                </Menu.Item>\n            </>\n            )}\n            {user && (\n                <>\n                <Menu.Item key=\"5\" icon={<BookOutlined />}>\n                    <Link to=\"/fragments\">My Fragments</Link>\n                </Menu.Item>\n                {/* <SubMenu key=\"sub1\" icon={<BuildOutlined />} title=\"Fragments\">\n                    <Menu.Item key=\"6\">Fragment 01</Menu.Item>\n                    <Menu.Item key=\"7\">Fragment 02</Menu.Item>\n                    <Menu.Item key=\"8\">Fragment 03</Menu.Item>\n                </SubMenu> */}\n                </>\n            )}\n        </Menu>\n        </Sider>\n        <Layout className=\"site-layout\" >\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n        {user &&(<Menu theme=\"dark\" mode=\"horizontal\" style={{float: 'right', backgroundColor: \"#161616\"}}>\n            <Menu.Item key=\"12\"  onClick={logoutProcess}>Logout</Menu.Item>\n        </Menu>)}\n        </Header>\n        <Content style={{ margin: '0 16px' }}>\n            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n            {children}\n            </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>©2020 Created by Jero Fernández</Footer>\n        </Layout>\n    </Layout>\n    );\n}\n\nexport default LayoutApp","import React, {useContext}  from \"react\"\nimport { Redirect, Route } from \"react-router-dom\"\nimport {MyContext} from \"../context\"\n\nexport default ({ component: Component, ...rest}) => {\n    const {user} = useContext(MyContext)\nreturn <Route\n    {...rest}\n    render={props =>\n    user ? (\n        <Component {...props} />\n    ) :(\n        <Redirect\n        to={{\n            pathname:\"/login\",\n            state: { from: props.location}\n        }}/>\n        )}/>\n    }","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport {Signup, Login, Fragments, FragmentDetail} from \"./pages\"\nimport LayoutApp from './components/LayoutApp'\nimport PrivateRoute from './components/PrivateRutes'\n\nconst Home = () => <h1>Home</h1>\nconst Profile = () => <h1>Profile</h1>\nconst NotFound = () => <h1> Not Found</h1>\n\n\n\n\nconst Router = () => (\n  <BrowserRouter>\n    <LayoutApp>\n      <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signup\" component={Signup}/>\n          <Route exact path=\"/login\" component={Login}/>\n          <PrivateRoute exact path=\"/profile\" component={Profile}/>\n          <PrivateRoute exact path=\"/fragments\" component={Fragments}/>\n          <PrivateRoute exact path=\"/fragments/:fragmentId\" component={FragmentDetail}/>\n          <Route exact path=\"/notFound\" component={NotFound}/>\n      </Switch>\n    </LayoutApp>\n  </BrowserRouter>\n);\n\nexport default Router;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.dark.css';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport Provider from './context'\n\n\nReactDOM.render( \n    <Provider >\n        <Router / >\n    </Provider> , document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}